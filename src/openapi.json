{
  "openapi": "3.0.3",
  "info": {
    "title": "Library Management System API",
    "version": "1.0.0",
    "description": "REST API for managing books, users, and loans. Authentication is JWT-based with RBAC (ADMIN, BORROWER). ISBNs are normalized (hyphens/spaces removed)."
  },
  "servers": [{ "url": "http://localhost:3000" }],
  "tags": [
    { "name": "Health", "description": "Health and diagnostics" },
    { "name": "Auth", "description": "Authentication endpoints" },
    { "name": "Books", "description": "Catalog management and search" },
    { "name": "Borrowers", "description": "Admin views over borrower users" },
    { "name": "Loans", "description": "Borrow/return operations and listings" },
    { "name": "Reports", "description": "CSV exports and analytics" }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" }
    },
    "parameters": {
      "QParam": { "name": "q", "in": "query", "schema": { "type": "string" }, "description": "Free text across title, author, ISBN (hyphens/spaces ignored)" },
      "AuthorParam": { "name": "author", "in": "query", "schema": { "type": "string" } },
      "TitleParam": { "name": "title", "in": "query", "schema": { "type": "string" } },
      "IsbnParam": { "name": "isbn", "in": "query", "schema": { "type": "string" }, "description": "Exact ISBN; hyphens/spaces allowed" },
      "LimitParam": { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 20 } },
      "OffsetParam": { "name": "offset", "in": "query", "schema": { "type": "integer", "default": 0 } },
      "IdPathParam": { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
    },
    "responses": {
      "Unauthorized": { "description": "Unauthorized" },
      "Forbidden": { "description": "Forbidden" },
      "NotFound": { "description": "Not found" },
      "Conflict": { "description": "Conflict" },
      "ValidationError": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": { "error": { "type": "string" } }
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "title": { "type": "string" },
          "author": { "type": "string" },
          "isbn": { "type": "string" },
          "available_quantity": { "type": "integer" },
          "shelf_location": { "type": "string", "nullable": true },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string", "enum": ["ADMIN", "BORROWER"] },
          "registered_date": { "type": "string", "format": "date", "nullable": true },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        }
      },
      "Loan": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "book_id": { "type": "integer" },
          "user_id": { "type": "integer" },
          "due_date": { "type": "string", "format": "date" },
          "returned_at": { "type": "string", "format": "date-time", "nullable": true },
          "idempotency_key": { "type": "string", "nullable": true },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        }
      },
      "PaginatedBooks": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/Book" } },
          "total": { "type": "integer" },
          "limit": { "type": "integer" },
          "offset": { "type": "integer" }
        }
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
  "tags": ["Health"],
        "summary": "Health check",
        "security": [],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/auth/register": {
      "post": {
  "tags": ["Auth"],
        "summary": "Register a user (default role BORROWER)",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "role": { "type": "string", "enum": ["ADMIN", "BORROWER"], "nullable": true },
                  "registered_date": { "type": "string", "format": "date", "nullable": true }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } } },
          "409": { "$ref": "#/components/responses/Conflict" },
          "400": { "$ref": "#/components/responses/ValidationError" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login and receive a JWT",
        "security": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "type": "object", "required": ["email", "password"], "properties": { "email": { "type": "string" }, "password": { "type": "string" } } } } }
        },
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "type": "object", "properties": { "token": { "type": "string" }, "user": { "$ref": "#/components/schemas/User" } } } } } },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "400": { "$ref": "#/components/responses/ValidationError" }
        }
      }
    },

    "/api/books": {
      "get": {
        "tags": ["Books"],
        "summary": "List or search books (use 'q' for free-text search)",
        "security": [],
        "parameters": [
          { "$ref": "#/components/parameters/QParam" },
          { "$ref": "#/components/parameters/AuthorParam" },
          { "$ref": "#/components/parameters/TitleParam" },
          { "$ref": "#/components/parameters/IsbnParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/OffsetParam" }
        ],
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PaginatedBooks" } } } } }
      },
      "post": {
        "tags": ["Books"],
        "summary": "Create a book (ADMIN)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "type": "object", "required": ["title", "author", "isbn", "available_quantity"], "properties": { "title": { "type": "string" }, "author": { "type": "string" }, "isbn": { "type": "string" }, "available_quantity": { "type": "integer" }, "shelf_location": { "type": "string" } } } } } },
        "responses": { "201": { "description": "Created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Book" } } } }, "409": { "$ref": "#/components/responses/Conflict" }, "401": { "$ref": "#/components/responses/Unauthorized" }, "403": { "$ref": "#/components/responses/Forbidden" }, "400": { "$ref": "#/components/responses/ValidationError" } }
      }
    },
    "/api/books/{id}": {
      "get": {
        "tags": ["Books"],
        "summary": "Get a book by id",
        "security": [],
        "parameters": [{ "$ref": "#/components/parameters/IdPathParam" }],
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Book" } } } }, "404": { "$ref": "#/components/responses/NotFound" } }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update a book (ADMIN)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "$ref": "#/components/parameters/IdPathParam" }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Book" } } } },
        "responses": { "200": { "description": "OK" }, "404": { "$ref": "#/components/responses/NotFound" }, "401": { "$ref": "#/components/responses/Unauthorized" }, "403": { "$ref": "#/components/responses/Forbidden" }, "400": { "$ref": "#/components/responses/ValidationError" } }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete a book (ADMIN)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "$ref": "#/components/parameters/IdPathParam" }],
        "responses": { "204": { "description": "No Content" }, "404": { "$ref": "#/components/responses/NotFound" }, "401": { "$ref": "#/components/responses/Unauthorized" }, "403": { "$ref": "#/components/responses/Forbidden" } }
      }
    },

    "/api/borrowers": {
      "get": {
  "tags": ["Borrowers"],
  "summary": "List borrowers (ADMIN)",
        "security": [{ "bearerAuth": [] }],
  "responses": { "200": { "description": "OK" }, "401": { "$ref": "#/components/responses/Unauthorized" }, "403": { "$ref": "#/components/responses/Forbidden" } }
      }
    },
    "/api/borrowers/{id}": {
      "get": {
  "tags": ["Borrowers"],
  "summary": "Get borrower (owner/admin)",
        "security": [{ "bearerAuth": [] }],
  "parameters": [{ "$ref": "#/components/parameters/IdPathParam" }],
  "responses": { "200": { "description": "OK" }, "404": { "$ref": "#/components/responses/NotFound" }, "401": { "$ref": "#/components/responses/Unauthorized" }, "403": { "$ref": "#/components/responses/Forbidden" } }
      },
      "put": {
  "tags": ["Borrowers"],
  "summary": "Update borrower (ADMIN)",
        "security": [{ "bearerAuth": [] }],
  "parameters": [{ "$ref": "#/components/parameters/IdPathParam" }],
  "responses": { "200": { "description": "OK" }, "404": { "$ref": "#/components/responses/NotFound" }, "401": { "$ref": "#/components/responses/Unauthorized" }, "403": { "$ref": "#/components/responses/Forbidden" } }
      }
    },

    "/api/loans": {
      "post": {
  "tags": ["Loans"],
  "summary": "Create loan (checkout) [borrower self or admin for any]",
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "type": "object", "required": ["book_id", "due_date"], "properties": { "book_id": { "type": "integer" }, "user_id": { "type": "integer", "description": "Admin may specify target user" }, "due_date": { "type": "string", "format": "date" }, "idempotency_key": { "type": "string" } } } } } },
  "responses": { "201": { "description": "Created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Loan" } } } }, "409": { "$ref": "#/components/responses/Conflict" }, "401": { "$ref": "#/components/responses/Unauthorized" }, "403": { "$ref": "#/components/responses/Forbidden" }, "400": { "$ref": "#/components/responses/ValidationError" } }
      }
    },
    "/api/loans/{id}/return": {
      "post": {
  "tags": ["Loans"],
  "summary": "Return loan (owner or admin)",
        "security": [{ "bearerAuth": [] }],
  "parameters": [{ "$ref": "#/components/parameters/IdPathParam" }],
  "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Loan" } } } }, "404": { "$ref": "#/components/responses/NotFound" }, "409": { "$ref": "#/components/responses/Conflict" }, "401": { "$ref": "#/components/responses/Unauthorized" }, "403": { "$ref": "#/components/responses/Forbidden" } }
      }
    },
    "/api/loans/me": {
      "get": {
  "tags": ["Loans"],
  "summary": "Current loans of the authenticated user",
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Loan" } } } } }, "401": { "description": "Unauthorized" } }
      }
    },
    "/api/loans/overdue": {
      "get": {
  "tags": ["Loans"],
  "summary": "Overdue loans (ADMIN)",
        "security": [{ "bearerAuth": [] }],
  "responses": { "200": { "description": "OK" }, "401": { "$ref": "#/components/responses/Unauthorized" }, "403": { "$ref": "#/components/responses/Forbidden" } }
      }
    },

    "/api/reports/overdue/last-month.csv": {
  "get": { "tags": ["Reports"], "summary": "Export overdue borrows of last month (CSV)", "responses": { "200": { "description": "CSV" } } }
    },
    "/api/reports/borrows/last-month.csv": {
  "get": { "tags": ["Reports"], "summary": "Export all borrows of last month (CSV)", "responses": { "200": { "description": "CSV" } } }
    }
  }
}
